[{"uri":"/docs-template/reference/testproject.html","title":"testProject","content":"Say"},{"uri":"/docs-template/reference/testproject-say.html","title":"Say","content":"Say \na module \nSay.hello \nhello"},{"uri":"/docs-template/reference/testproject-say.html#hello","title":"Say.hello","content":"Say.hello \nhello \na function that says hello to the name you pass it"},{"uri":"/docs-template/index.html","title":"The fslab documentation template\n","content":"(**\n# The fslab documentation template\n\nThis template scaffolds the necessary folder structure for FSharp.Formatting \nand adds custom styles in the fslab theme. \n\n## Installation\n\nThis template is available as a dotnet new template:\n\n```no-highlight\ndotnet new -i FsLab.DocumentationTemplate - \n```\n\n## Usage\n\nin the root of your project that you want to write documentation for, run:\n\n```no-highlight\ndotnet new fslab-docs\n```\n\n## Quick content rundown:\n\nThe template initializes the following folder structure when you initialize it in the root of your project:\n\n<pre>\ndocs\n│   index.fsx\n│   _template.html\n│\n├───content\n│       0_Markdown-Cheatsheet.md\n│       1_fsharp-code-example.fsx\n│       fsdocs-custom.css\n│       fsdocs-custom.min.css\n│\n├───img\n│       favicon.ico\n│       logo.png\n│\n└───reference\n        _template.html\n</pre>\n\n- `index.fsx` is the file you are reading just now. It contains the very content you are reading at the moment \nin a markdown block indicated by `(** *)` guards. It will be rendered as the root `index.html` file of your documentation.\n\n- `_template.html` is the root html scaffold (sidebar to the left, script and style loading)\n\n- the `content` folder contains the following files:\n\n    - `0_Markdown-Cheatsheet.md` is a adaption of [this markdown cheat sheet]() that shows how to write markdown and\n    showcases the rendered equivalents. It can also be viewed in all its glory [here]().\n\n    - `1_fsharp-code-example.fsx` is a script file that showcases the syntax highlighting style for F# snippets. \n    It can also be viewed in all its glory [here]().\n\n    - `fsdocs-custom.css` and `fsdocs-custom.min.css` contain the custom styling that applies the fslab styles.\n\n - the `img` folder contains the fslab logo and favicon. replace these files (with the same names) to youse sours\n\n - `reference/_template.html` is a slightly adapted version of the template above for the API documentation\n\n## Creating new content\n\nPlease refer to the [FSharp.Formatting documentation]().\n\n*)"},{"uri":"/docs-template/content/a2.html","title":"More\n","content":"(**# More*)\nlet a = 42"},{"uri":"/docs-template/content/b9.html","title":"Have\n","content":"(**# Have*)\nlet a = 42"},{"uri":"/docs-template/content/b6.html","title":"Menu\n","content":"(**# Menu*)\nlet a = 42"},{"uri":"/docs-template/content/0_Markdown-Cheatsheet.html","title":"Markdown cheatsheet\n","content":"# Markdown cheatsheet\n\n**Adapted from https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet**\n\nThis is intended as a quick reference and showcase. For more complete info, see [John Gruber's original spec](http://daringfireball.net/projects/markdown/) and the [Github-flavored Markdown info page](http://github.github.com/github-flavored-markdown/).\n\n### Table of Contents  \n\n- [Headers](#Headers)  \n- [Emphasis](#Emphasis)  \n- [Lists](#Lists)  \n- [Links](#Links)  \n- [Images](#Images)  \n- [Code and Syntax Highlighting](#Code-and-Syntax-Highlighting)  \n- [Tables](#Tables)\n- [Blockquotes](#Blockquotes)  \n- [Inline HTML](#Inline-HTML)  \n- [Horizontal Rule](#Horizontal-Rule)  \n- [Line Breaks](#Line-Breaks)  \n- [YouTube Videos](#YouTube-Videos)  \n\n## Headers\n\n```no-highlight\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\nAlternatively, for H1 and H2, an underline-ish style:\n\nAlt-H1\n======\n\nAlt-H2\n------\n```\n\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\nAlternatively, for H1 and H2, an underline-ish style:\n\nAlt-H1\n======\n\nAlt-H2\n------\n\n## Emphasis\n\n```no-highlight\nEmphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n```\n\nEmphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n\n## Lists\n\n(In this example, leading and trailing spaces are shown with with dots: ⋅)\n\n```no-highlight\n1. First ordered list item\n2. Another item\n⋅⋅* Unordered sub-list. \n1. Actual numbers don't matter, just that it's a number\n⋅⋅1. Ordered sub-list\n4. And another item.\n\n⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅\n⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅\n⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n* Unordered list can use asterisks\n- Or minuses\n+ Or pluses\n```\n\n1. First ordered list item\n2. Another item\n  * Unordered sub-list. \n1. Actual numbers don't matter, just that it's a number\n  1. Ordered sub-list\n4. And another item.\n\n   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n   To have a line break without a paragraph, you will need to use two trailing spaces.  \n   Note that this line is separate, but within the same paragraph.  \n   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n* Unordered list can use asterisks\n- Or minuses\n+ Or pluses\n\n## Links\n\nThere are two ways to create links.\n\n```no-highlight\n[I'm an inline-style link](https://www.google.com)\n\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself].\n\nURLs and URLs in angle brackets will automatically get turned into links. \nhttp://www.example.com or <http://www.example.com> and sometimes \nexample.com (but not on Github, for example).\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\n[1]: http://slashdot.org\n[link text itself]: http://www.reddit.com\n```\n\n[I'm an inline-style link](https://www.google.com)\n\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself].\n\nURLs and URLs in angle brackets will automatically get turned into links. \nhttp://www.example.com or <http://www.example.com> and sometimes \nexample.com (but not on Github, for example).\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\n[1]: http://slashdot.org\n[link text itself]: http://www.reddit.com\n\n## Images\n\n```no-highlight\nHere's our logo (hover to see the title text):\n\nInline-style: \n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n\nReference-style: \n![alt text][logo]\n\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\"\n```\n\nHere's our logo (hover to see the title text):\n\nInline-style: \n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n\nReference-style: \n![alt text][logo]\n\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\"\n\n## Code and Syntax Highlighting\n\nCode blocks are part of the Markdown spec, but syntax highlighting isn't. However, many renderers -- like Github's and *FSharp.Formatting* -- support syntax highlighting. Which languages are supported and how those language names should be written will vary from renderer to renderer. \n\n```no-highlight\nInline `code` has `back-ticks around` it.\n```\n\nInline `code` has `back-ticks around` it.\n\nBlocks of code are either fenced by lines with three back-ticks <code>```</code>, or are indented with four spaces. I recommend only using the fenced code blocks -- they're easier and only they support syntax highlighting.\n\nCurrently, only F# and C# syntax highlighting is supported by FSharp.Formatting. You can write code blocks in markdown like this\n\nF#:\n\n<pre>\n<code>```fsharp</code>\nlet a = 42\n<code>```</code>\n</pre>\n\n```fsharp\nlet a = 42\n```\n\nOr C#:\n\n<pre>\n<code>```csharp</code>\nvar a = 42\n<code>```</code>\n</pre>\n\n```csharp\nvar a = 42\n```\n\nFSharp.Formatting will also attempt to highlight snippets that are not in those languages, which will have mixed results\n\n<pre>\n<code>```javascript</code>\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n<code>```</code>\n</pre>\n\n\n```javascript\nconst a = 2\nvar s = \"JavaScript syntax highlighting? not really.\";\nalert(s);\n// Some javascript keywords that are not detected because they are no equivalents in F#/C#:\nnative\nthrows\ninstanceof\n```\n\nHowever, there is way better syntax highlighting and also tooltips available for F# and C# if you use script files for generating those docs instead. See an F# example [here](1_fsharp-code-example.html).\n\n## Tables\n\nTables aren't part of the core Markdown spec, but FSharp.Formatting supports them. Tables are styled via bulma striped table style.\n\n```no-highlight\nColons can be used to align columns.\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\nThere must be at least 3 dashes separating each header cell.\nThe outer pipes (|) are optional, and you don't need to make the \nraw Markdown line up prettily. You can also use inline Markdown.\n\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3\n```\n\nColons can be used to align columns.\n\n| Tables        | Are           | Cool |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\nThere must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.\n\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3\n\n## Blockquotes\n\n```no-highlight\n> Blockquotes are very handy in email to emulate reply text.\n> This line is part of the same quote.\n\nQuote break.\n\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. \n```\n\n> Blockquotes are very handy in email to emulate reply text.\n> This line is part of the same quote.\n\nQuote break.\n\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. \n\n## Inline HTML\n\nYou can also use raw HTML in your Markdown, and it'll mostly work pretty well. \n\n```no-highlight\n<dl>\n  <dt>Definition list</dt>\n  <dd>Is something people use sometimes.</dd>\n\n  <dt>Markdown in HTML</dt>\n  <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\n</dl>\n```\n\n<dl>\n  <dt>Definition list</dt>\n  <dd>Is something people use sometimes.</dd>\n\n  <dt>Markdown in HTML</dt>\n  <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\n</dl>\n\n## Horizontal Rule\n\n```\nThree or more...\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n```\n\nThree or more...\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n\n## Line Breaks\n\nMy basic recommendation for learning how line breaks work is to experiment and discover -- hit &lt;Enter&gt; once (i.e., insert one newline), then hit it twice (i.e., insert two newlines), see what happens. You'll soon learn to get what you want. \"Markdown Toggle\" is your friend. \n\nHere are some things to try out:\n\n```\nHere's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\n```\n\nHere's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also begins a separate paragraph, but...  \nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\n\n## YouTube Videos\n\nThey can't be added directly but you can add an image with a link to the video like this:\n\n```no-highlight\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=YOUTUBE_VIDEO_ID_HERE\n\" target=\"_blank\"><img src=\"http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg\" \nalt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /></a>\n```\n\nOr, in pure Markdown, but losing the image sizing and border:\n\n```no-highlight\n[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE)\n```\n\n---\n\nLicense: [CC-BY](https://creativecommons.org/licenses/by/3.0/)"},{"uri":"/docs-template/content/c1.html","title":"The\n","content":"(**# The*)\nlet a = 42"},{"uri":"/docs-template/content/a9.html","title":"Hopefully\n","content":"(**# Hopefully*)\nlet a = 42"},{"uri":"/docs-template/content/b2.html","title":"Scrolling\n","content":"(**# Scrolling*)\nlet a = 42"},{"uri":"/docs-template/content/b3.html","title":"Behaviour\n","content":"(**# Behaviour*)\nlet a = 42"},{"uri":"/docs-template/content/c4.html","title":"Ever\n","content":"(**# Ever*)\nlet a = 42"},{"uri":"/docs-template/content/1_fsharp-code-example.html","title":"F# code formatting example\n","content":"(**\n# F# code formatting example\n\nThis page is rendered from a F# script as input, containing real F# code besides this markdown section.\n\nhover above some bindings to get tooltips like in a real editor environment.\n\n*)\n\n///this is comment\nlet a = 42\n\n(***include-value:a***)\n\n// see some operators/keywords:\n\nif a > 0 then printfn \"see, this is included: %i\" a\n\n// an interface:\ntype IA =\n    abstract member B : string -> string\n\n// an interface implementation:\n\ntype C() =\n    interface IA with\n        member _.B(a) = id a\n\nlet d = C() :> IA\n\nlet e = d.B(\"soos\")\n\n(***include-value:e***)\nmodule ThisIsAModule =\n\n    type Union =\n        | First\n        | Second of IA\n\n    type Enum =\n        | First = 1\n        | Second = 2"},{"uri":"/docs-template/content/a5.html","title":"You\n","content":"(**# You*)\nlet a = 42"},{"uri":"/docs-template/content/c2.html","title":"Highest\n","content":"(**# Highest*)\nlet a = 42"},{"uri":"/docs-template/content/a4.html","title":"So\n","content":"(**# So*)\nlet a = 42"},{"uri":"/docs-template/content/a6.html","title":"Can\n","content":"(**# Can*)\nlet a = 42"},{"uri":"/docs-template/content/a3.html","title":"Content\n","content":"(**# Content*)\nlet a = 42"},{"uri":"/docs-template/content/b7.html","title":"Unless\n","content":"(**# Unless*)\nlet a = 42"},{"uri":"/docs-template/content/b1.html","title":"Nice\n","content":"(**# Nice*)\nlet a = 42"},{"uri":"/docs-template/content/a8.html","title":"The\n","content":"(**# The*)\nlet a = 42"},{"uri":"/docs-template/content/b5.html","title":"This\n","content":"(**# This*)\nlet a = 42"},{"uri":"/docs-template/content/a1.html","title":"Some\n","content":"(**# Some*)\nlet a = 42"},{"uri":"/docs-template/content/b8.html","title":"You\n","content":"(**# You*)\nlet a = 42"},{"uri":"/docs-template/content/c3.html","title":"Screen\n","content":"(**# Screen*)\nlet a = 42"},{"uri":"/docs-template/content/b4.html","title":"Of\n","content":"(**# Of*)\nlet a = 42"},{"uri":"/docs-template/content/a7.html","title":"See\n","content":"(**# See*)\nlet a = 42"}]